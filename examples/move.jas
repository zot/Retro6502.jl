;;;;;;;;;;;;;;;;;;
;;;; INCLUDES ;;;;
;;;;;;;;;;;;;;;;;;
.imm using ...Workers

;;;;;;;;;;;;;;
;;;; DEFS ;;;;
;;;;;;;;;;;;;;
D6510           = 0x0000
R6510           = 0x0001
VIC_BANK        = 0xDD00
VIC_MEM         = 0xD018
STD_VIC_BANK    = 0x03
STD_VIC_MEM     = 0x14

;;;;;;;;;;;;;
;;; BANKS ;;;
;;;;;;;;;;;;;
*           = VIC_BANK
            .data STD_VIC_BANK
*           = VIC_MEM
            .data STD_VIC_MEM

;;;;;;;;;;;;;;;;;;;;;;
;;;; SCREEN SETUP ;;;;
;;;;;;;;;;;;;;;;;;;;;;
*           = 0x400
            .data ascii2screen.(fill(' ', 1000))
*           = 0x400
            .data ascii2screen.("                MOVEMENT")
*           = 0xD800
            .data fill(0x01, 1000)

;;;;;;;;;;;;;;;;;;;;;;
;;;; ROM ROUTINES ;;;;
;;;;;;;;;;;;;;;;;;;;;;
            ; fake routines get consecutive addresses 0x0000, 0x0001, 0x0002, and so on
JL_SCNKEY   .fake Workers.SCNKEY
JL_GETIN    .fake Workers.GETIN
*           = 0xFF9F
SCNKEY      JMP JL_SCNKEY
*           = 0xFFE4
GETIN       JMP JL_GETIN

;;;;
;; NOTES
;;
;; cursor keys
;; down: 17
;; up: 145 (17 + 0x80)
;; right: 29
;; left: 157
;;;;

;;;;;;;;;;;;;;
;;;; MAIN ;;;;
;;;;;;;;;;;;;;
row         = 0x4a0
left        = 0x9d
right       = 0x1d

*           = 0x0800
pos         .data 0x00

main
            ;; hide ROM
            LDA #0b000
            STA R6510
            LDA #0b101
            STA D6510
            ;; set up first position
            LDX #0
            LDY #0

update      ;; X <- oldpos, Y <- newpos
            CPY #40
            BCC store ; Y < 40
            LDY #0    ; Y >= 40 so wrap it to 0
store       ;; erase the old spot then draw the new
            LDA #' '
            STA row,x
            LDA #90 ; diamond
            STA row,y
            STY pos  ;; store the new position to protect it from SCNKEY / GETIN

keyevent    ;; read a key and check if it's an arrow
            JSR SCNKEY      ;SCAN KEYBOARD
            JSR GETIN       ;GET CHARACTER
            LDX pos
            LDY pos
            CMP #left
            BEQ moveleft
            CMP #right
            BNE keyevent
            INY
            INY
moveleft    DEY
            JMP update
