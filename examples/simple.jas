;; semicolon is the comment character, except in .julia or .jmacro code, which uses normal Julia code

        .include simple-support.jl ; contains the zorp function
        .julia floop = "fred"
*       = zorp(0x8000)
        .julia println("CURRENT PC: $(__CONTEXT__.offset)")
        .data string(VERSION)        ; place the current Julia version at this location
        .julia begin #only Julia-style comments here -- ; is a separator
            println("HELLO $floop, start = $start.")
        end
mac     .macro (a)-> asm"""
        .julia println("Hello \a")
        .data "hello \a"
blub    .value blub # value is next address after the macro
        """
joe
fred    #mac maluba
fred2   #mac maluba2
        .data 0x01
align1  .imm align(4)
        .data 0x01
align2  .imm align(4)
        .data 0x2
align3  .imm align(4)
        .data 0x3
align4  .imm align(4)
        .julia println("Fred: $fred")
        .imm noasm"""
        noasm ignores
        everything in
        its string
        """
fake_hello .fake ()-> println("FAKE HELLO")
        .include simple-inc.jas
